package birthdayProjectV2;

import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeSet;
import java.util.concurrent.ThreadLocalRandom;

public class PersonList {

	private TreeSet<ZonedDateTime> birthdaySet = new TreeSet<ZonedDateTime>();
	
	private Map<ZonedDateTime, Person> bdPerson = new HashMap<>();
	
	public PersonList(){
		
	}

	
	public boolean insert (){
		
		return false;
	}

	public void add(Person p) {

		bdPerson.put(p.getDayOfBirth(), p);
		birthdaySet.add(p.getDayOfBirth());

	}
	
	public Person search(ZonedDateTime today){
		if(birthdaySet.contains(today)){
			return bdPerson.get(today);
		}
		return null;
	}
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	public static void main(String [] args){

		
		long l = 524362362;
		System.out.println((int) l);
		
		PersonList pl = new PersonList();
		
		for(int i = 0; i < 1000000; i++){ //1 mio.
			int year = ThreadLocalRandom.current().nextInt(1940, (2017 + 1));
			int month = ThreadLocalRandom.current().nextInt(1, (12 + 1));
			int day = ThreadLocalRandom.current().nextInt(1, (30 + 1));
			if(month == 2 && day > 28){day = 28;}
			
			ZonedDateTime bday = ZonedDateTime.of(year, month, day, 0, 0, 0, 0, ZoneId.systemDefault());
			Person per = new Person(("Vorname" + Integer.toString(i)), "Nachname" + Integer.toString(i), i, Integer.toString(i) + "@gmx.de", bday);
			pl.add(per);
		}
		
		ZonedDateTime zdt = ZonedDateTime.of(1998, 4, 5, 0, 0, 0, 0, ZoneId.systemDefault());
		Person a = new Person("Markus", "Josua Schwarzer", 1752375649, "markus.schwarzer@hotmail.de", zdt);
		pl.add(a);

		
		long timer = System.currentTimeMillis();
		
		pl.search(a.getDayOfBirth());
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		long timer1 = System.currentTimeMillis();
		
		System.out.println("that took " + ((timer1 - timer)) + "milliseconds");

	}
}
